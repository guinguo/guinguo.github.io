<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Guinguo&#39;s blog</title>
  <subtitle>Just try it</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2016-05-16T13:45:03.460Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>guinguo</name>
    <email>guinguo@yahoo.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>JVM中几大垃圾收集器</title>
    <link href="http://yoursite.com/2016/05/16/JVM%E4%B8%AD%E5%87%A0%E5%A4%A7%E5%9E%83%E5%9C%BE%E6%94%B6%E9%9B%86%E5%99%A8/"/>
    <id>http://yoursite.com/2016/05/16/JVM中几大垃圾收集器/</id>
    <published>2016-05-16T00:59:28.000Z</published>
    <updated>2016-05-16T13:45:03.460Z</updated>
    
    <content type="html">&lt;p&gt;　　在java虚拟机中，无用的类的判断有一下三个条件：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;该类的所有实例已被回收，堆中无该类的任何实例&lt;/li&gt;
&lt;li&gt;加载该类的classloder已被回收&lt;/li&gt;
&lt;li&gt;该类的java.lang.class对象没有在任何地方被引用，无法在任何地方通过反射访问其方法&lt;/li&gt;
&lt;/ul&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;Serial&quot;&gt;&lt;a href=&quot;#Serial&quot; class=&quot;headerlink&quot; title=&quot;Serial&quot;&gt;&lt;/a&gt;Serial&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;历史最悠久，是一个单线程的垃圾收集器，采用&lt;strong&gt;复制&lt;/strong&gt;算法，在进行垃圾收集时，必须暂停其他所有的工作线程，直到它收集结束。它只会使用一个CPU或者单个线程进行工作。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;可能体验不好，但他简单高效，（一般停留几十ms或者100ms内），&lt;br&gt;不常发生是可以接受的，它仍是JVM运行在Client下默认的新生代收集器。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https://www.processon.com/chart_image/573925ffe4b0b2fcdca6bedb.png&quot; alt=&quot;Serial&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;说一下收集的并行与并发：
并行（Parallel）：多条GC线程与用户线程并行工作，此时的用户线程依然要等待。
并发（Concurrent）：GC线程与用户线程同时执行（不一定并行），可能交替执行。用户线程运行着，
GC线程运行在另一个CPU
&lt;/code&gt;&lt;/pre&gt;&lt;/blockquote&gt;
&lt;h2 id=&quot;ParNew&quot;&gt;&lt;a href=&quot;#ParNew&quot; class=&quot;headerlink&quot; title=&quot;ParNew&quot;&gt;&lt;/a&gt;ParNew&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;Serial 的多线程版本，其他很多可空参数与Serial相同(&lt;code&gt;-XX:SurvivorPatio&lt;/code&gt;)、收集算法、暂停其他所有线程STW(Stop The World)、对象分配规则、回收策略。&lt;br&gt;　　 Server下新生代收集器首选，除了Serial，只有它能与CMS一起配合工作。&lt;br&gt;可以使用&lt;code&gt;-XX: ParallelGCThreads&lt;/code&gt;指定线程数&lt;br&gt;&lt;img src=&quot;https://www.processon.com/chart_image/573935d7e4b06d79094ba025.png&quot; alt=&quot;ParNew&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;Parallel-Scavenge&quot;&gt;&lt;a href=&quot;#Parallel-Scavenge&quot; class=&quot;headerlink&quot; title=&quot;Parallel Scavenge&quot;&gt;&lt;/a&gt;Parallel Scavenge&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;这是一个新生代收集器，使用&lt;strong&gt;复制&lt;/strong&gt;算法，并行的多线程垃圾收集器，也叫吞吐量优先的收集器。&lt;br&gt;他与CMS的区别是，他的目标是达到一个可控的吞吐量，CMS是尽量减少停顿时间。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;那什么事吞吐量呢？&lt;br&gt;吞吐量 = 运行用户代码时间&lt;strong&gt;/&lt;/strong&gt;(运行用户代码时间+垃圾收集时间)&lt;br&gt;例如：jvm运行了100分钟，gc运行了1分钟，吞吐量就= (100-1)/100=99%&lt;br&gt;所以，CMS&lt;em&gt;（停顿时间）&lt;/em&gt;适合交互程序，而Parallel Scavenge&lt;em&gt;（高吞吐量）&lt;/em&gt;适合后台运算不需要太多交互的任务。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;参数&quot;&gt;&lt;a href=&quot;#参数&quot; class=&quot;headerlink&quot; title=&quot;参数&quot;&gt;&lt;/a&gt;参数&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;MaxGCPauseMillis  设置停顿时间，&amp;gt;0的毫秒数，是牺牲吞吐量，新生代空间获取来的&lt;br&gt;GCTimeRatio  设置吞吐量， 1-99，默认99，即最大允许1/(1+99)=1%的GC时间&lt;br&gt;比如GCTimeRatio=19，GC时间就为5%,===&amp;gt; 1/(1+19).&lt;br&gt;-XX:+UseAdaptivaSizePolicy 是一个开关，打开的话无需手动指定新生代，老年代大小，Survivor区比例等细节参数，会自动调整（动态的）&lt;br&gt;一般只需设置- Xmx(最大堆)，MaxGCpauseMillis(最大停顿时间)或者GCTimeRatio(吞吐量),其他细节由JVM完成。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;自适应也是Parallel Scavenge 与 ParNew的重要区别&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;Serial-Old&quot;&gt;&lt;a href=&quot;#Serial-Old&quot; class=&quot;headerlink&quot; title=&quot;Serial Old&quot;&gt;&lt;/a&gt;Serial Old&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;是Serial 的老年代版本，单线程。使用&lt;strong&gt;标记-整理&lt;/strong&gt;算法，主要用于Client模式。&lt;br&gt;在Server下&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;JDK1.5前与Parallel Scavenge 搭配&lt;/li&gt;
&lt;li&gt;作为CMS的后备&lt;br&gt;&lt;img src=&quot;https://www.processon.com/chart_image/57395e7be4b06d79094d9945.png&quot; alt=&quot;Serial Old&quot;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Parallel-Old&quot;&gt;&lt;a href=&quot;#Parallel-Old&quot; class=&quot;headerlink&quot; title=&quot;Parallel Old&quot;&gt;&lt;/a&gt;Parallel Old&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;是Parallel Scavenge 的老年代版本，多线程。使用&lt;strong&gt;标记-整理&lt;/strong&gt;算法，在JDK1.6才有的&lt;br&gt;使用：在注重吞吐量及CPU资源敏感的场合==&amp;gt;&lt;strong&gt;Parallel Scavenge + Parallel Old&lt;/strong&gt;&lt;br&gt;&lt;img src=&quot;https://www.processon.com/chart_image/57395fb0e4b06d79094dadad.png&quot; alt=&quot;Serial Old&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;CMS-Concurrent-Mark-Sweep&quot;&gt;&lt;a href=&quot;#CMS-Concurrent-Mark-Sweep&quot; class=&quot;headerlink&quot; title=&quot;CMS(Concurrent Mark Sweep)&quot;&gt;&lt;/a&gt;CMS(Concurrent Mark Sweep)&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;这是一个为了减少回收停顿时间的收集器，采用&lt;strong&gt;标记-清除&lt;/strong&gt;算法&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- T1	初始标记(initial mark)		仅标记可达GCroots的对象	STW&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- T2	并发标记(concurrent mark)	&lt;span class=&quot;function&quot;&gt;GCRoots &lt;span class=&quot;title&quot;&gt;Tracing&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(追踪)&lt;/span&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- T3	重新标记&lt;span class=&quot;params&quot;&gt;(remark)&lt;/span&gt;				修正T2时变动的对象		STW&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- T4	并发清除&lt;span class=&quot;params&quot;&gt;(concurrent sweep)&lt;/span&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;T2&amp;gt;T4&amp;gt;T3&amp;gt;T1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&quot;https://www.processon.com/chart_image/5739c12fe4b0b2fcdcb04295.png&quot; alt=&quot;CMS&quot;&gt;&lt;br&gt;&lt;strong&gt;但是CMS也有它的缺点&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对CPU资源非常敏感(并发程序的特点)，默认启动回收线程数：(cpu数量+3)/4，当CPU数量越多，回收的线程占用CPU就少==&amp;gt;比如 CPU=2时，那么久启动一个线程回收，占了50%的CPU资源.&lt;/li&gt;
&lt;li&gt;无法处理浮动垃圾(出现在标记过程之后的垃圾),可能出现Concurrent Mode Failure，导致另一次Full GC。&lt;/li&gt;
&lt;li&gt;标记-清理 ==&amp;gt; 产生大量的空间碎片，无法分配大的对象，导致另一次Full GC。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;+UseCompactAtFullCollection (开关，默认打开)，在CMS顶不住要进行Full GC时开启内存碎片的合并整理过程，但停顿时间不得不变长。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;G1&quot;&gt;&lt;a href=&quot;#G1&quot; class=&quot;headerlink&quot; title=&quot;G1&quot;&gt;&lt;/a&gt;G1&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;Garbage-First，是当今收集器技术发展的最前沿成果之一，JDK7u4后达到商用程度。用于服务端应用的收集器，有如下特点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;并行与并发，G1能够充分利用多CPU，多核环境下的硬件优势，来缩短STW停顿时间，且可以并发收集，让java进程继续执行&lt;/li&gt;
&lt;li&gt;分代收集，与其他收集器一样，能够采用不同的方式去处理新建的对象和已经存活一段时间，熬过了多次GC的对象，以获得更好的收集效果。&lt;/li&gt;
&lt;li&gt;可预测的停顿，相比CMS的优势，可以指定一个长度M的毫秒时间片内，消耗在GC的时间&amp;lt;N毫秒。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;G1不再是单独在某个代进行收集，而是划分堆成独立的Region，并且根据每个Region的价值大小进行收集的。cc采用Remembered Set来避免全局扫描的，查看G1的-&lt;a href=&quot;http://www.oracle.com/technetwork/articles/java/g1gc-1984535.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;详细信息&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;回收步骤: &lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;口     初始标记(Initial Marking)        &lt;/li&gt;
&lt;li&gt;口        并发标记(Concurrent Marking)    &lt;/li&gt;
&lt;li&gt;口        最终标记(FInal Marking)                &lt;/li&gt;
&lt;li&gt;口        筛选回收(Live Data Counting and Evacuation)    &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;前几个步骤与CMS有很多相似指出，初始标记只是标记一下GC Roots能直接关联到的对象，并修改TAMS(Next Top at Mask Start)的值，让下一阶段的用户程序并发运行时，能在可用的Region中创建新对象，需要STW，时间短。并发标记是从GC Roots开始对堆中对象进行可达性分析，找出存活对象，耗时较长，但也可以并发执行。最终标记阶段是为了修正在并发标记期间因用户程序继续运作而导致标记产生变动的那一部分标记记录，虚拟机将这段时间的对象变化记录在线程Remembered Set Logs里面，最终标记阶段需要把Remembered Set Logs的数据合并到Remembered Set中，需要STW，但仍可以并行执行。最后在筛选回收阶段会对每个Region的回收价值和成本进行排序，根据用户期望的GC停顿时间来指定回收计划，也可以做到与用户程序一起并发执行，但是因为时间可控，停顿用户将大幅度提高收集效率。&lt;br&gt;&lt;img src=&quot;https://www.processon.com/chart_image/5739cd6fe4b0b2fcdcb0dc23.png&quot; alt=&quot;G1&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;推荐使用-G1-的场景-Recommended-Use-Cases&quot;&gt;&lt;a href=&quot;#推荐使用-G1-的场景-Recommended-Use-Cases&quot; class=&quot;headerlink&quot; title=&quot;推荐使用 G1 的场景(Recommended Use Cases)&quot;&gt;&lt;/a&gt;推荐使用 G1 的场景(Recommended Use Cases)&lt;/h3&gt;&lt;p&gt;G1的首要目标是为需要大量内存的系统提供一个保证GC低延迟的解决方案. 也就是说堆内存在6GB及以上,稳定和可预测的暂停时间小于0.5秒.&lt;/p&gt;
&lt;p&gt;如果应用程序具有如下的一个或多个特征,那么将垃圾收集器从CMS或ParallelOldGC切换到G1将会大大提升性能.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Full GC 次数太频繁或者消耗时间太长.&lt;/li&gt;
&lt;li&gt;对象分配的频率或代数提升(promotion)显著变化.&lt;/li&gt;
&lt;li&gt;受够了太长的垃圾回收或内存整理时间(超过0.5~1秒)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;注意: 如果正在使用CMS或ParallelOldGC,而应用程序的垃圾收集停顿时间并不长,那么继续使用现在的垃圾收集器是个好主意. 使用最新的JDK时并不要求切换到G1收集器。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      总结一下jvm中几大垃圾收集器
    
    </summary>
    
      <category term="JVM学习" scheme="http://yoursite.com/categories/JVM%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="垃圾收集器" scheme="http://yoursite.com/tags/%E5%9E%83%E5%9C%BE%E6%94%B6%E9%9B%86%E5%99%A8/"/>
    
      <category term="GC" scheme="http://yoursite.com/tags/GC/"/>
    
  </entry>
  
  <entry>
    <title>Java中的枚举类Enum</title>
    <link href="http://yoursite.com/2016/05/15/Java%E4%B8%AD%E7%9A%84%E6%9E%9A%E4%B8%BE%E7%B1%BBEnum/"/>
    <id>http://yoursite.com/2016/05/15/Java中的枚举类Enum/</id>
    <published>2016-05-15T03:00:59.000Z</published>
    <updated>2016-05-15T09:03:18.068Z</updated>
    
    <content type="html">&lt;p&gt;Effective Java2中介绍了目前的枚举类模式，我简单总结一下。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;以前的枚举模式&quot;&gt;&lt;a href=&quot;#以前的枚举模式&quot; class=&quot;headerlink&quot; title=&quot;以前的枚举模式&quot;&gt;&lt;/a&gt;以前的枚举模式&lt;/h3&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;figcaption&gt;&lt;span&gt;enum&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; APPLE_RED =&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; APPLE_GREEN =&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; APPLE_YELLOW =&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; BANANA_GREEN =&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; BANANA_YELLOW =&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;产生的问题：&quot;&gt;&lt;a href=&quot;#产生的问题：&quot; class=&quot;headerlink&quot; title=&quot;产生的问题：&quot;&gt;&lt;/a&gt;产生的问题：&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;如果将apple传到想要banana的方法中，程序是无法检测出错误的。&lt;/li&gt;
&lt;li&gt;使程序很脆弱。如果int发生了变化，客户端就必须重新编译。如果不，程序运行正常，但他们的运行行为就是不确定的。&lt;/li&gt;
&lt;li&gt;打印出来就是一个数字， 意思不明确&lt;/li&gt;
&lt;li&gt;换成String可能导致性能问题（串比较）&lt;/li&gt;
&lt;li&gt;书写可能出现错误&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;现在的模式-类型安全的枚举&quot;&gt;&lt;a href=&quot;#现在的模式-类型安全的枚举&quot; class=&quot;headerlink&quot; title=&quot;现在的模式 类型安全的枚举&quot;&gt;&lt;/a&gt;现在的模式 &lt;em&gt;类型安全的枚举&lt;/em&gt;&lt;/h3&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;figcaption&gt;&lt;span&gt;enum&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;enum&lt;/span&gt; Apple &amp;#123;RED,GREEN,YELLOW&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;enum&lt;/span&gt; Banana &amp;#123;GREEN,YELLOW&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;想法&quot;&gt;&lt;a href=&quot;#想法&quot; class=&quot;headerlink&quot; title=&quot;想法&quot;&gt;&lt;/a&gt;想法&lt;/h3&gt;&lt;p&gt;　　通过共有的静态final域为每一个枚举常量导出实例的类。因为没有可以访问的构造器。–&amp;gt;final–&amp;gt;Singleton&lt;br&gt;完善了int枚举模式的不足之处，还允许添加任意的方法和域，并实现任意的接口。&lt;/p&gt;
&lt;h3 id=&quot;栗子&quot;&gt;&lt;a href=&quot;#栗子&quot; class=&quot;headerlink&quot; title=&quot;栗子&quot;&gt;&lt;/a&gt;栗子&lt;/h3&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;figcaption&gt;&lt;span&gt;enum&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;enum&lt;/span&gt; Operation &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		PLUS(&lt;span class=&quot;string&quot;&gt;&quot;+&quot;&lt;/span&gt;)&amp;#123;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;apply&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; x,&lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; y)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; x+y;&amp;#125;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		MINUS(&lt;span class=&quot;string&quot;&gt;&quot;-&quot;&lt;/span&gt;)&amp;#123;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;apply&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; x,&lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; y)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; x-y;&amp;#125;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		TIMES(&lt;span class=&quot;string&quot;&gt;&quot;*&quot;&lt;/span&gt;)&amp;#123;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;apply&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; x,&lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; y)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; x*y;&amp;#125;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		DIVIDE(&lt;span class=&quot;string&quot;&gt;&quot;/&quot;&lt;/span&gt;)&amp;#123;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;apply&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; x,&lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; y)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; x/y;&amp;#125;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; String symbol;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		Operation(String symbol)&amp;#123;&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.symbol = symbol;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;title&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.symbol;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;apply&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; x,&lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; y)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;figcaption&gt;&lt;span&gt;test&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String[] args)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; x = Double.parseDouble(args[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; y = Double.parseDouble(args[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(Operation op : Operation.values())&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			System.out.printf(&lt;span class=&quot;string&quot;&gt;&quot;%f  %s %f = %f%n &quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					x, op, y, op.apply(x,y));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;编译运行&lt;/strong&gt;&lt;br&gt;&lt;img src=&quot;http://7xsve9.com1.z0.glb.clouddn.com/enum.jpg&quot; alt=&quot;result&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      简单总结一下Java中的枚举类
    
    </summary>
    
      <category term="Java基础" scheme="http://yoursite.com/categories/Java%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="Enum类" scheme="http://yoursite.com/tags/Enum%E7%B1%BB/"/>
    
  </entry>
  
  <entry>
    <title>Linux系统配置ssh免密码登录</title>
    <link href="http://yoursite.com/2016/05/14/Linux%E7%B3%BB%E7%BB%9F%E9%85%8D%E7%BD%AEssh%E5%85%8D%E5%AF%86%E7%A0%81%E7%99%BB%E5%BD%95/"/>
    <id>http://yoursite.com/2016/05/14/Linux系统配置ssh免密码登录/</id>
    <published>2016-05-14T02:51:24.000Z</published>
    <updated>2016-05-14T05:17:30.126Z</updated>
    
    <content type="html">&lt;p&gt; 一开始以为很简单，配置一下就好，没想到，一粗心，弄了有点久&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;　　首先呢，什么是SSH呢？–&amp;gt;&lt;a href=&quot;http://www.ibm.com/developerworks/cn/aix/library/au-sshsecurity/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;传送门&lt;/a&gt;。然后，如果你每次登录远程服务器，都需要按(复杂的)密码，会很麻烦的，为了安全性，不会设置简单密码，可是每次都输入，&lt;del&gt;很痛苦的&lt;/del&gt;。。。&lt;/p&gt;
&lt;p&gt;好了，如果你了解了ssh之后，那么，如何生成密匙对呢？&lt;/p&gt;
&lt;h2 id=&quot;利用git的ssh密匙对&quot;&gt;&lt;a href=&quot;#利用git的ssh密匙对&quot; class=&quot;headerlink&quot; title=&quot;利用git的ssh密匙对&quot;&gt;&lt;/a&gt;利用git的ssh密匙对&lt;/h2&gt;&lt;p&gt;　　打开PUTTYGEN，在Putty安装目录下，如果没有自行下载。然后点击顶部Conversions-&amp;gt;Import Key,选择id_rsa，一般存在C盘的用户目录下的.ssh文件夹里面，点击Save private key&lt;br&gt;保存下来，用于authenticate的公匙。把id_rsa.pub里面那一行内容拷贝下来。跳过第2步。&lt;/p&gt;
&lt;h2 id=&quot;自己生成密匙对&quot;&gt;&lt;a href=&quot;#自己生成密匙对&quot; class=&quot;headerlink&quot; title=&quot;自己生成密匙对&quot;&gt;&lt;/a&gt;自己生成密匙对&lt;/h2&gt;&lt;p&gt;　　同样打开PUTTYGEN,点击Generate，&lt;strong&gt;注意，鼠标要在中间（进度条下面不断移动！），如果不这样做要等很久，上次有同学后台运行，等了快半个钟都没好，不知道老外怎么设计的这个软件。。。&lt;/strong&gt;&lt;br&gt;&lt;img src=&quot;/images/acmusume/01.png&quot; height=&quot;50px&quot; ,=&quot;&quot; width=&quot;50px&quot; style=&quot;margin:0 0&quot;&gt;,好了之后，点击Save private key,保存下来，用于authenticate的公匙。顺便吧key框里面的内容拷贝下来，保存也行，点击Save public key。然后continue~&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;配置服务器&quot;&gt;&lt;a href=&quot;#配置服务器&quot; class=&quot;headerlink&quot; title=&quot;配置服务器&quot;&gt;&lt;/a&gt;配置服务器&lt;/h2&gt;&lt;p&gt;好了，完成以上两步中的一步就可以继续了，打开，putty，用密码登录远程服务器操作。&lt;/p&gt;
&lt;h3 id=&quot;建立-ssh目录（如果没有）&quot;&gt;&lt;a href=&quot;#建立-ssh目录（如果没有）&quot; class=&quot;headerlink&quot; title=&quot;建立~/.ssh目录（如果没有）&quot;&gt;&lt;/a&gt;建立~/.ssh目录（如果没有）&lt;/h3&gt;&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;ls ~/.ssh
authorized_keys
#没有就
mkdir ~/.ssh
vim ~/.ssh/authorized_keys
#把刚才复制的内容，贴进去
:wq#保存退出
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;注意，这里有一个坑，就是鼠标右键粘贴时，前面几个字母可能会丢失，我也不知道为什么，一不注意，就像我一样GG了–&amp;gt;&lt;a href=&quot;http://blog.sina.com.cn/s/blog_5f5e2ce50101788l.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;server refused our key&lt;/a&gt;&lt;/strong&gt;，我跟这位up主一样去找各种原因，，，&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;重启sshd服务&quot;&gt;&lt;a href=&quot;#重启sshd服务&quot; class=&quot;headerlink&quot; title=&quot;重启sshd服务&quot;&gt;&lt;/a&gt;重启sshd服务&lt;/h3&gt;&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;service sshd restart
&lt;/code&gt;&lt;/pre&gt;&lt;/blockquote&gt;
&lt;h3 id=&quot;测试ssh公匙登录&quot;&gt;&lt;a href=&quot;#测试ssh公匙登录&quot; class=&quot;headerlink&quot; title=&quot;测试ssh公匙登录&quot;&gt;&lt;/a&gt;测试ssh公匙登录&lt;/h3&gt;&lt;p&gt;　　打开Putty&lt;br&gt;&lt;img src=&quot;http://7xsve9.com1.z0.glb.clouddn.com/ssh.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;然后就可以在putty中加入它了。然后点击open。&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;Using username &amp;quot;root&amp;quot;.
Authenticating with public key &amp;quot;imported-openssh-key&amp;quot;
Last login: Fri May 13 22:29:27 2016 from xx.xx.xx.xx
&lt;/code&gt;&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;中间如果出现什么问题可以参考 &lt;a href=&quot;https://segmentfault.com/a/1190000002911599&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;centos7 服务器部署ssh证书授权登录&lt;/a&gt; 进行更详细的配置。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      不用输入密码自动远程登录
    
    </summary>
    
      <category term="Linux" scheme="http://yoursite.com/categories/Linux/"/>
    
    
      <category term="ssh" scheme="http://yoursite.com/tags/ssh/"/>
    
  </entry>
  
  <entry>
    <title>CentOS 开启http 端口(80)</title>
    <link href="http://yoursite.com/2016/05/09/CentOS-%E5%BC%80%E5%90%AFhttp-%E7%AB%AF%E5%8F%A3-80/"/>
    <id>http://yoursite.com/2016/05/09/CentOS-开启http-端口-80/</id>
    <published>2016-05-09T04:47:59.000Z</published>
    <updated>2016-05-11T03:14:56.873Z</updated>
    
    <content type="html">&lt;p&gt;　　最近我的vps差点被我玩 &lt;del&gt;坏了&lt;/del&gt;&lt;br&gt;&lt;img align=&quot;center&quot; src=&quot;/images/acmusume/01.png&quot; height=&quot;50px&quot; ,=&quot;&quot; width=&quot;50px&quot; style=&quot;margin:0 0&quot;&gt;&lt;br&gt;就是防火墙被我改了，一开始22端口被我换成1888，因为一般的ssh连接都是用22端口，我就想换一个，也许安全的点。一开始没问题，过几天后我发现居然连接不上了。。。&lt;/p&gt;
&lt;p&gt;　　我就查了网上的资料，发现是我防火墙的问题。我开了一个应用，tomcat的8080端口，然后用nginx代理为80，但是，自从我改了ssh端口后就访问不了了，网上的教程就是说有两种方法开启端口。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;编辑iptables文件&lt;br&gt;什么是iptables呢？，它是Linux的防火墙，可以根据各种规则配置开放或者关闭网络端口。&lt;a href=&quot;https://zh.wikipedia.org/wiki/Iptables&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;wiki&lt;/a&gt;&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;vi /etc/sysconfig/iptables　
#允许80端口通过防火墙，加在COMMIT之前
A INPUT -m state –state NEW -m tcp -p tcp –dport 80 -j ACCEPT
#保存退出后，重启防火墙
service iptables restart
#或者 /etc/init.d/iptables restart
&lt;/code&gt;&lt;/pre&gt;&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;直接command更改(原理也是同1)　&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;#查看防火墙状态
service iptables status
#开启80端口
iptables -I INPUT -p tcp --dport 80 -j ACCEPT 
#保存，可能我之前就是没有保存，导致配置无效。。。
service iptables save 
&lt;/code&gt;&lt;/pre&gt;&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;但是，我安装以上方法配置后，发现仍然不行。&lt;/strong&gt;&lt;br&gt;nginx也访问不了了，最后我是用以下方式解决的~&lt;/p&gt;
&lt;h1 id=&quot;1、iptables-rules&quot;&gt;&lt;a href=&quot;#1、iptables-rules&quot; class=&quot;headerlink&quot; title=&quot;1、iptables rules&quot;&gt;&lt;/a&gt;1、iptables rules&lt;/h1&gt;&lt;p&gt;　　有两种方法打开80端口，第一种是用iptables命令，第二种是配置文件，(就如同我上面列的两种)，&lt;br&gt;使用命令的：&lt;br&gt;检测iptables是否有效，简单的命令：&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;iptables -L
&lt;/code&gt;&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;http://7xsve9.com2.z0.glb.clouddn.com/iptables-L.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;现在是没有开启80端口的，&lt;/p&gt;
&lt;p&gt;可以看出哪些端口是开启的(ACCEPT)，哪些是关闭的(REJECT)，&lt;strong&gt;但是&lt;/strong&gt;，并没有我80端口accept！&lt;br&gt;可以使用命令：&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;iptables -vnL
&lt;/code&gt;&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;查看更精确的信息。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xsve9.com2.z0.glb.clouddn.com/iptables-vnl.jpg&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;2、打开80端口&quot;&gt;&lt;a href=&quot;#2、打开80端口&quot; class=&quot;headerlink&quot; title=&quot;2、打开80端口&quot;&gt;&lt;/a&gt;2、打开80端口&lt;/h1&gt;&lt;p&gt;　打开80端口，我们需要增加一条记录，加在ACCEPT 后REJECT前，&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;#iptables -I INPUT 1 -i eth0 -p tcp --dport 80 -m state --state NEW,ESTABLISHED -j ACCEPT
&lt;/code&gt;&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;这条命令会增加一条规则，在第一行，启动防火墙端口80，再一次检查端口状态&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;   #iptables –line -vnL&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;http://7xsve9.com2.z0.glb.clouddn.com/iptables-80.jpg&quot;&gt;&lt;br&gt;现在，我们看到80端口已经打开了，外网可以访问到服务器的80端口应用了.&lt;/p&gt;
&lt;h1 id=&quot;3、保存&quot;&gt;&lt;a href=&quot;#3、保存&quot; class=&quot;headerlink&quot; title=&quot;3、保存&quot;&gt;&lt;/a&gt;3、保存&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;但是&lt;/strong&gt;这只是临时的，只有保存了，&lt;del&gt;我之前就是没有保存。。。&lt;/del&gt; 之后才会生效，不然重启后又没了。&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;#service iptables save
&lt;/code&gt;&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;正确的话，会有提示说iptables:[ OK ]&lt;/p&gt;
&lt;h1 id=&quot;4、重启防火墙&quot;&gt;&lt;a href=&quot;#4、重启防火墙&quot; class=&quot;headerlink&quot; title=&quot;4、重启防火墙&quot;&gt;&lt;/a&gt;4、重启防火墙&lt;/h1&gt;&lt;p&gt;现在，防火墙的规则已经永久保证了，我们可以重启它&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;#service iptables restart
&lt;/code&gt;&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;会提示几个[ OK ],表示正常了。&lt;br&gt;最后，测试一下是否可以访问到服务器的80端口,&lt;br&gt;ok,now it work~&lt;/p&gt;
</content>
    
    <summary type="html">
    
      如何打开Linux的端口
    
    </summary>
    
      <category term="Linux" scheme="http://yoursite.com/categories/Linux/"/>
    
    
      <category term="CentOS开启端口" scheme="http://yoursite.com/tags/CentOS%E5%BC%80%E5%90%AF%E7%AB%AF%E5%8F%A3/"/>
    
  </entry>
  
  <entry>
    <title>JVM学习之OpenJDK源码编译</title>
    <link href="http://yoursite.com/2016/05/03/JVM%E5%AD%A6%E4%B9%A0%E4%B9%8BOpenJDK%E6%BA%90%E7%A0%81%E7%BC%96%E8%AF%91/"/>
    <id>http://yoursite.com/2016/05/03/JVM学习之OpenJDK源码编译/</id>
    <published>2016-05-03T02:26:26.000Z</published>
    <updated>2016-05-03T15:19:14.987Z</updated>
    
    <content type="html">&lt;p&gt;在centos7下进行编译&lt;br&gt;具体步骤：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;获取openjdk源码&lt;/li&gt;
&lt;li&gt;安装openjdk6–BoostrapJK&lt;/li&gt;
&lt;li&gt;安装编译时的依赖&lt;/li&gt;
&lt;li&gt;配置环境变量&lt;/li&gt;
&lt;li&gt;编译&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;1. 获取openjdk源码&lt;/h3&gt;&lt;br&gt;可以到这里去下载，&lt;a href=&quot;https://jdk7.java.net/source.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;OpenJDK Source Releases&lt;/a&gt;&lt;br&gt;我下载的是openjdk-7u40版本，openjdk7，update40，build43&lt;br&gt;&lt;h3&gt;2. 下载jdk6–BoostrapJDK&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;我使用jdk6来辅助编译。可以到oracle官网下载，&lt;a href=&quot;http://www.oracle.com/technetwork/java/javase/downloads/java-archive-downloads-javase6-419409.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;jdk-6u45-linux-x64.bin&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;/p&gt;&lt;h3&gt;3.安装编译时的依赖&lt;/h3&gt;&lt;br&gt;可以使用以下命令一次安装完成&lt;p&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;yum -y install build-essential gawk m4
openjkd-6-jkd libasound2-dev libcups2-dev 
libxrender-dev xorg-dev xutils-dev
xllproto-print-dev binutils libmotif3
libmotif-dev ant
&lt;/code&gt;&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;/p&gt;&lt;h3&gt;3.配置环境变量,编译&lt;/h3&gt;&lt;br&gt;OpenJKD在编译时读取的环境变量很多，但是大多数都有默认值，必须设置的只有两个：LANG和ALT_BOOTDIR。分别为C跟bootJDK的路径&lt;br&gt;所有的环境变量可以使用下面的脚本设置：&lt;br&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;export LANG=C&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#Bootstrap JDK 安装位置&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;export ALT_BOOTDIR=/opt/openJDK/jdk1.6.0_45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#允许自动下载&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;export ALLOW_DOWNLOADS=true&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#并行编译的线程数，和CPU内核数量一致即可&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;export HOTSPOT_BUILD_JOBS=2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;export ALT_PARALLEL_COMPILE_JOBS=2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#比较本次build出来的映像与先前版本的差异，对于我们没哟意义，&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#必须设置为false&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;export SKIP_COMPARE_IMAGES=true&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#使用预编译头文件，不加这个编译会更慢一些&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;export USE_PRECOMPILED_HEADER=true&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#要编译的内容&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;export BUILD_LANGTOOLS=true&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;export BUILD_HOTSPOT=true&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;export BUILD_JDK=true&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#把它设置为false，可以避开javaws和浏览器java插件的build&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;BUILD_DEPLOY=false&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#把它设置为false就不会build出安装包。因为安装包里有些奇怪的依赖&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;BUILD_INSTALL=false&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#编译结果所存放的路径&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;export ALT_OUTPUTDIR=/opt/openJDK/openjdk/build&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#这两个变量必须去掉&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;unset CLASSPATH&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;unset JAVA_HOME&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;unset LD_LIBRARY_PATH&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;/p&gt;
&lt;p&gt;全部设置结束之后，可以输入 make sanity 检测是否正确，如果一切顺利，会输出：Sanity check passed.就可以编译了。&lt;br&gt;输入make(不加参数默认为make all)，我的虚拟机配置比较低，整个编译的过程用了一个多钟。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;结果如下：&lt;/strong&gt;&lt;br&gt;&lt;img src=&quot;http://7xsve9.com1.z0.glb.clouddn.com/build.jpg&quot;&gt;&lt;br&gt;我在虚拟机中编译的，而且配置不高，所以有点慢.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;那么问题来了，如何看结果ne？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　编译完成之后，进入OpenJDK源码下的build/j2sdk-image目录,(或者build-debug、build-fastdebug这两个目录)，这是整个JDK完整编译结果，内容为debug版jdk，将其复制到%JAVA_HOME%下，替换Oracle JDK。就可以作为一个完整的JDK使用，编译出来的虚拟机，在-version命令中带有用户的机器名。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[root@localhost ~]# java -version
openjdk version &amp;quot;1.7.0-internal-debug&amp;quot;
OpenJDK Runtime Environment (build 1.7.0-internal-debug-root_2016_04_25_20_00-b00)
OpenJDK 64-Bit Server VM (build 24.0-b56-jvmg, mixed mode)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;　　大多数情况我们只关心Hotspot虚拟机，只想单独编译它的话，那么使用hotspot/make目录下的MakeFile进行替换即可，其他参数与前面一致，这时候虚拟机的输出结果存放在&lt;br&gt;    &lt;code&gt;build/hotspot/outputdir/linux_amd64_compiler2&lt;/code&gt; 中，里面对应了不同的优化级别的目录。&lt;/p&gt;
&lt;p&gt;进入 目录jvmg，在运行虚拟机前，还要手工编辑目录下的env.sh文件，这个文件由编译脚本自动产生，用于设置虚拟机的环境变量，里面已经发布了”JAVA_HOME，CLASSPATH，HOTSPOT_BUILD_USER” 3个环境变量，还需要增加一个“LD_LIBRSRY_CLASSPATH”：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;LD_LIBRARY_PATH=.:$&amp;#123;JAVA_HOME&amp;#125;/jre/lib/amd64/native_threads:$&amp;#123;JAVA_HOME&amp;#125;/jre/lib/amd64:/opt/openJDK/openjdk/build/hotspot/outputdir/linux_amd64_compiler2/product&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;export LD_LIBRARY_PATH&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后执行&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;. ./env.sh
./gama -version   #有可能是test_gamma,这是自带的一段八皇后代码
&lt;/code&gt;&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;结果如下&lt;/strong&gt;&lt;br&gt;&lt;img src=&quot;http://7xsve9.com1.z0.glb.clouddn.com/jvm.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;　　自己编译的虚拟机成功运行起来，哈哈哈~&lt;br&gt;&lt;img src=&quot;/images/acmusume/32.png&quot; height=&quot;50px&quot; ,=&quot;&quot; width=&quot;50px&quot; style=&quot;margin:0 0&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;编译过程中有可能报错：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Error: time is more than 10 years from present: 1104530400000 when building java/openjdk* lists.freebsd.org&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;通过修改CurrencyData.properties文件, 把10年之前的时间修改为10年之内即可&lt;br&gt;Index: /usr/openjdk/jdk/src/share/classes/java/util/CurrencyData.properties&lt;br&gt;把2006改掉就可以&lt;del&gt;重新编译了&lt;/del&gt;&lt;img src=&quot;/images/acmusume/01.png&quot; height=&quot;50px&quot; ,=&quot;&quot; width=&quot;50px&quot; style=&quot;margin:0 0&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      自己编译JDK
    
    </summary>
    
      <category term="JVM学习" scheme="http://yoursite.com/categories/JVM%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="java虚拟机" scheme="http://yoursite.com/tags/java%E8%99%9A%E6%8B%9F%E6%9C%BA/"/>
    
      <category term="编译openjdk" scheme="http://yoursite.com/tags/%E7%BC%96%E8%AF%91openjdk/"/>
    
  </entry>
  
  <entry>
    <title>解除网页内容复制限制</title>
    <link href="http://yoursite.com/2016/04/30/%E8%A7%A3%E9%99%A4%E7%BD%91%E9%A1%B5%E5%86%85%E5%AE%B9%E5%A4%8D%E5%88%B6%E9%99%90%E5%88%B6/"/>
    <id>http://yoursite.com/2016/04/30/解除网页内容复制限制/</id>
    <published>2016-04-30T10:44:23.000Z</published>
    <updated>2016-04-30T11:26:45.520Z</updated>
    
    <content type="html">&lt;p&gt;首先呢，背景是自己要把某个页面的数据拿下来打印，好了，一般的话，我们会选中，然后按Ctrl+C复制，到Word或者其他地方Ctrl+V粘贴，然而发现并没有，&lt;del&gt; 我去&lt;/del&gt;。。。&lt;/p&gt;
&lt;p&gt;好吧，进入主题，首先我百度了一下，发现不是禁用脚本，就是保存网页，然而并没有什么卵用，我找了几个Chrome的解禁插件，也没用。。。&lt;br&gt;&lt;img src=&quot;/images/acmusume/01.png&quot; height=&quot;50px&quot; ,=&quot;&quot; width=&quot;50px&quot; style=&quot;margin:0 0&quot;&gt;这就尴尬了&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;但是&lt;/strong&gt;,不要慌。H5有一个contenteditable 的属性，当其为true是，内容可编辑，这就好办了。&lt;br&gt;怎么用呢？&lt;/p&gt;
&lt;p&gt;首先，你要找到你需要的内容的元素id，&lt;br&gt;按F12，第2步选中内容&lt;br&gt;&lt;img src=&quot;http://7xsve9.com1.z0.glb.clouddn.com/getId.jpg&quot;&gt;&lt;br&gt;然后复制下来，换到下面代码中的page-body去&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;方法1：&lt;br&gt;在当前页面的浏览器地址栏输入：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;     javascript:&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&#39;page-body&#39;&lt;/span&gt;).setAttribute(&lt;span class=&quot;string&quot;&gt;&#39;contentEditable&#39;&lt;/span&gt;, &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;方法2：&lt;br&gt;在当前页面按F12进入调试工具，切换到console窗口，键入&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;     &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&#39;page-body&#39;&lt;/span&gt;).setAttribute(&lt;span class=&quot;string&quot;&gt;&#39;contentEditable&#39;&lt;/span&gt;, &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;回车。两种方法结果一样~&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;h4&gt;那么神奇的事情即将发生&lt;/h4&gt;&lt;br&gt;&lt;img src=&quot;http://7xsve9.com1.z0.glb.clouddn.com/contentEditable.gif&quot;&gt;&lt;p&gt;&lt;/p&gt;
&lt;p&gt;###直接把内容拉倒编辑器或者Word即可&lt;/p&gt;
</content>
    
    <summary type="html">
    
      一行代码解除限制~
    
    </summary>
    
      <category term="小技巧" scheme="http://yoursite.com/categories/%E5%B0%8F%E6%8A%80%E5%B7%A7/"/>
    
    
      <category term="网页复制内容" scheme="http://yoursite.com/tags/%E7%BD%91%E9%A1%B5%E5%A4%8D%E5%88%B6%E5%86%85%E5%AE%B9/"/>
    
      <category term="解除复制限制" scheme="http://yoursite.com/tags/%E8%A7%A3%E9%99%A4%E5%A4%8D%E5%88%B6%E9%99%90%E5%88%B6/"/>
    
  </entry>
  
  <entry>
    <title>dtd基础入门</title>
    <link href="http://yoursite.com/2016/04/24/dtd%E5%85%A5%E9%97%A8/"/>
    <id>http://yoursite.com/2016/04/24/dtd入门/</id>
    <published>2016-04-24T10:54:04.000Z</published>
    <updated>2016-04-30T11:15:34.764Z</updated>
    
    <content type="html">&lt;h2 id=&quot;一、What-is-DTD&quot;&gt;&lt;a href=&quot;#一、What-is-DTD&quot; class=&quot;headerlink&quot; title=&quot;一、What is DTD&quot;&gt;&lt;/a&gt;一、What is DTD&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;DTD (Document type definition)文档类型定义, &lt;a href=&quot;https://en.wikipedia.org/wiki/Document_type_definition&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;wiki&lt;/a&gt;&lt;br&gt;用于规定xml或者html之类的标记性文档的类型&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;二、How-to-use-it&quot;&gt;&lt;a href=&quot;#二、How-to-use-it&quot; class=&quot;headerlink&quot; title=&quot;二、How to use it&quot;&gt;&lt;/a&gt;二、How to use it&lt;/h2&gt;&lt;p&gt;直接举一个栗子，比如现在我定义了一个Person对象，&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;person&amp;gt;
    &amp;lt;id&amp;gt;&amp;lt;/id&amp;gt;
    &amp;lt;name&amp;gt;&amp;lt;/name&amp;gt;
    &amp;lt;password&amp;gt;&amp;lt;/password&amp;gt;
    &amp;lt;age&amp;gt;&amp;lt;/age&amp;gt;
&amp;lt;/person&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;对应的dtd类型定义如下&lt;br&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;figcaption&gt;&lt;span&gt;对应dtd&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;lt;!DOCTYPE persons [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!ELEMENT persons (person+)&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!ELEMENT person (id,name,password,age)&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!ELEMENT person id ID #REQUIRED&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!ELEMENT id (#PCDATA)&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!ELEMENT name (#PCDATA)&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!ELEMENT password (#PCDATA)&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!ELEMENT age (#PCDATA)&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;其中persons 是根元素，每个元素都要说明，persons中有person就如第二行，+号表示1次或者多次，跟正则语法一样&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;用修饰符，(正则)，?表示0次或者1次，*表示0次或者多次，+号表示1次或者动词，默认表示1次&lt;br&gt;其中person中，逗号的属性是必须按照顺序写的，即引用了次dtd的xml的person节点的name节点不能出现在id节点前&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;可以把id设置为属性&lt;br&gt;声明属性,使用下列语法：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;lt;!ATTLIST 元素名称 属性名称 属性类型 默认值&amp;gt;&lt;br&gt;&amp;lt;!ATTLIST person id ID #REQUIRED&amp;gt;&lt;br&gt;&lt;strong&gt;其中类型有&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;类型                 描述 
CDATA        值为字符数据 (character data) 
(en1|en2|..) 此值是枚举列表中的一个值 
ID           值为唯一的 id 
IDREF        值为另外一个元素的 id 
IDREFS       值为其他 id 的列表 
NMTOKEN      值为合法的 XML 名称 
NMTOKENS     值为合法的 XML 名称的列表 
ENTITY       值是一个实体 
ENTITIES     值是一个实体列表 
NOTATION     此值是符号的名称 
xml:         值是一个预定义的 XML 值 
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;默认值参数可使用下列值：&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;值              解释
值              属性的默认值
#REQUIRED       属性值是必需的
#IMPLIED        属性不是必需的
#FIXED value    属性值是固定的 
&lt;/code&gt;&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;如果把sex设置为属性，就可以写：默认为男性&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;lt;!ATTLIST person sex PCDATA 男&amp;gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;但是，&lt;strong&gt;为person增加id属性，为必须的,id不能以数字开头…&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;三、Why-Use-a-DTD&quot;&gt;&lt;a href=&quot;#三、Why-Use-a-DTD&quot; class=&quot;headerlink&quot; title=&quot;三、Why Use a DTD?&quot;&gt;&lt;/a&gt;三、Why Use a DTD?&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;使用DTD，每个XML文件可以携带自己的格式的描述。&lt;/li&gt;
&lt;li&gt;使用DTD，团体中的每个人可以使用标准的DTD交换数据。&lt;/li&gt;
&lt;li&gt;应用程序可以使用标准的DTD来验证从外界接收到的数据是有效的。&lt;/li&gt;
&lt;li&gt;另外您可以使用DTD，以验证自己的数据。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;四、Using-in-XML&quot;&gt;&lt;a href=&quot;#四、Using-in-XML&quot; class=&quot;headerlink&quot; title=&quot;四、Using in XML&quot;&gt;&lt;/a&gt;四、Using in XML&lt;/h2&gt;&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;!DOCTYPE SYSTEM 是引用内部文件的
&amp;lt;!DOCTYPE PUBLIC 是引用网络文件的
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;例如：引入内部文件person.dtd&lt;br&gt;    &amp;lt;!DOCTYPE persons SYSTEM “person.dtd”&amp;gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;五、Practice&quot;&gt;&lt;a href=&quot;#五、Practice&quot; class=&quot;headerlink&quot; title=&quot;五、Practice&quot;&gt;&lt;/a&gt;五、Practice&lt;/h2&gt;&lt;p&gt;下面给出两道练习题：&lt;br&gt;1,&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;persons&amp;gt;
 &amp;lt;person id=&amp;quot;p1&amp;quot;&amp;gt;
  &amp;lt;sex&amp;gt;&amp;lt;/sex&amp;gt;
  &amp;lt;name&amp;gt;&amp;lt;/name&amp;gt;
  &amp;lt;age&amp;gt;&amp;lt;/age&amp;gt;
  &amp;lt;messages&amp;gt;
   &amp;lt;message&amp;gt;
    &amp;lt;title&amp;gt;&amp;lt;/title&amp;gt;
    &amp;lt;content&amp;gt;&amp;lt;/content&amp;gt;
   &amp;lt;/message&amp;gt;
  &amp;lt;/messages&amp;gt;
 &amp;lt;/person&amp;gt;
&amp;lt;/persons&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;2,&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;classroom id=&amp;quot;c1&amp;quot;&amp;gt;
 &amp;lt;claName&amp;gt;网工3班&amp;lt;/claName&amp;gt;
 &amp;lt;grade&amp;gt;2014&amp;lt;/grade&amp;gt;
 &amp;lt;students&amp;gt;
  &amp;lt;student&amp;gt;
   &amp;lt;id&amp;gt;s1&amp;lt;/id&amp;gt;
   &amp;lt;stuName&amp;gt;guin&amp;lt;/stuName&amp;gt;
   &amp;lt;age&amp;gt;21&amp;lt;/age&amp;gt;
  &amp;lt;/student&amp;gt;
  &amp;lt;student&amp;gt;
   &amp;lt;id&amp;gt;s1&amp;lt;/id&amp;gt;
   &amp;lt;stuName&amp;gt;guin&amp;lt;/stuName&amp;gt;
   &amp;lt;age&amp;gt;21&amp;lt;/age&amp;gt;
  &amp;lt;/student&amp;gt;
 &amp;lt;/students&amp;gt;
&amp;lt;/classroom&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;但是，使用dtd会出现一些&lt;strong&gt;问题&lt;/strong&gt;，&lt;br&gt;1，名称会冲突，如果person有name，message也有name就有问题&lt;br&gt;2，控制精度不够，比如sex应该为枚举类型，只有男跟女&lt;br&gt;导致dtd并不能适应很多场合，跟xml进行互换&lt;br&gt;在09年出现了schema，慢慢在xml的定义中替代了dtd&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;答案&lt;/strong&gt;&lt;br&gt;1，&lt;img src=&quot;http://7xsve9.com1.z0.glb.clouddn.com/classroom.dtd.jpg&quot; alt=&quot;classroom.dtd&quot; title=&quot;classroom.dtd&quot;&gt;&lt;/p&gt;
&lt;p&gt;2，&lt;img src=&quot;http://7xsve9.com1.z0.glb.clouddn.com/person.dtd.jpg&quot; alt=&quot;person.dtd&quot; title=&quot;person.dtd&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      简单介绍一下dtd
    
    </summary>
    
      <category term="周总结" scheme="http://yoursite.com/categories/%E5%91%A8%E6%80%BB%E7%BB%93/"/>
    
      <category term="WebService" scheme="http://yoursite.com/categories/%E5%91%A8%E6%80%BB%E7%BB%93/WebService/"/>
    
    
      <category term="dtd" scheme="http://yoursite.com/tags/dtd/"/>
    
  </entry>
  
  <entry>
    <title>第七周小结</title>
    <link href="http://yoursite.com/2016/04/17/%E7%AC%AC%E4%B8%83%E5%91%A8%E5%B0%8F%E7%BB%93/"/>
    <id>http://yoursite.com/2016/04/17/第七周小结/</id>
    <published>2016-04-17T15:21:49.000Z</published>
    <updated>2016-05-03T03:08:36.803Z</updated>
    
    <content type="html">&lt;p&gt;这一周好闷热啊啊啊，也是助班师兄师姐&lt;strong&gt;美美的卓盈师姐跟漂亮的月军师姐&lt;/strong&gt;，还有&lt;strong&gt;&lt;del&gt; 喝酒就脸红 &lt;/del&gt;的秀鹏师兄&lt;/strong&gt;拍毕业照的一周，今晚的毕业聚餐喝了不少啤酒呢，我说我啊&lt;br&gt;&lt;img src=&quot;/images/acmusume/17.png&quot; height=&quot;50px&quot; ,=&quot;&quot; width=&quot;50px&quot; style=&quot;margin:0 0&quot;&gt;&lt;br&gt;然后刚才突然下了一阵大暴雨(/_=  衣服都来不及收了。。。&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&quot;课内学习&quot;&gt;&lt;a href=&quot;#课内学习&quot; class=&quot;headerlink&quot; title=&quot;课内学习&quot;&gt;&lt;/a&gt;课内学习&lt;/h1&gt;&lt;p&gt;&lt;/p&gt;&lt;h2&gt;汇编&lt;/h2&gt;&lt;br&gt;主要学了输入功能:&lt;p&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;INT21H的1号功能：    输入一个字符并保存在AL里面&lt;br&gt;10号功能：    输入一个最长255的字符串，他会自动保存在定义好的缓存区里&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;并且学了几个数求平均数，主要考虑有无符号，并且有无溢出。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;有无符号可以用AND 运算检查最高位是否为1，是的话就是负数&lt;br&gt;溢出则扩充位数，可以使用CWD，自动把AX 扩充到DX+AX&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;还有十六进制写入&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;主要判断输入的字符有效性，30-39H直接，41-46H之间，61-66H之间，因为A到F跟a到f。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;跟字符串处理指令：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;MOVSB(W):一次处理一个字节(字)；&lt;br&gt;CMPSB:一次比较一个字节;&lt;br&gt;SCAS:串赋值，把AL或AX赋值到DS:SI字符串的位置上；&lt;br&gt;LODSB:加载字符：DS:SI ==&amp;gt; AL,AX;&lt;br&gt;STOSB:DS:SI ==&amp;gt; AL,AX ==&amp;gt; ES:DI&lt;br&gt;REP:重复命令，用于赋值串之类的；&lt;br&gt;REPE：重复比较，用于判断字符串相等不；&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;p&gt;这几个还没用过，感觉挺强大的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;/p&gt;&lt;h2&gt;计网&amp;amp;计组&lt;/h2&gt;&lt;br&gt;主要复习了上次的内容，还有讲实验课要注意些什么。&lt;del&gt; 实验都好水 &lt;/del&gt;&lt;br&gt;&lt;img src=&quot;/images/acmusume/01.png&quot; height=&quot;50px&quot; ,=&quot;&quot; width=&quot;50px&quot; style=&quot;margin:0 0&quot;&gt;&lt;p&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&quot;课外学习&quot;&gt;&lt;a href=&quot;#课外学习&quot; class=&quot;headerlink&quot; title=&quot;课外学习&quot;&gt;&lt;/a&gt;课外学习&lt;/h1&gt;&lt;p&gt;&lt;/p&gt;&lt;h2&gt;编译openJDK.&lt;/h2&gt;&lt;br&gt;环境是自己之前学Linux虚拟机装的CentOS7系统。&lt;p&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;操作系统    CentOS Linux release 7.1.1503 (Core)
gcc version 4.8.2 20140120 
openJdk版本    openjdk-7u40
BoottrapJDK   jdk-6u45
&lt;/code&gt;&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;步骤：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;获取openjdk源码&lt;/li&gt;
&lt;li&gt;下载jdk6–BoostrapJDK&lt;/li&gt;
&lt;li&gt;安装编译时的依赖&lt;/li&gt;
&lt;li&gt;make&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;下午搞了好久，准备编译的依赖，make sanity检查时老是出错，最后发现自己的配置不太对，&lt;br&gt;看了书上的教程才检查通过的。&lt;br&gt;吃完饭回来发现出错了。。。编了那么久，居然错了。。。&lt;br&gt;Error: time is more than 10 years from present: 1104530400000 when building java/openjdk* lists.freebsd.org&lt;/p&gt;
&lt;p&gt;改正后重新编，估计今晚不用关机了(/_=&lt;/p&gt;
&lt;p&gt;具体过程请看 &lt;strong&gt;&lt;a href=&quot;/2016/05/03/JVM学习之OpenJDK源码编译/&quot;&gt;JVM学习之OpenJDK源码编译&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;del&gt;今晚班聚喝了酒，有点不舒服，睡啦睡啦&lt;/del&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      小小吐槽一下吧0 0
    
    </summary>
    
      <category term="周总结" scheme="http://yoursite.com/categories/%E5%91%A8%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="毕业聚会" scheme="http://yoursite.com/tags/%E6%AF%95%E4%B8%9A%E8%81%9A%E4%BC%9A/"/>
    
      <category term="编译openJDK" scheme="http://yoursite.com/tags/%E7%BC%96%E8%AF%91openJDK/"/>
    
  </entry>
  
  <entry>
    <title>第六周周结</title>
    <link href="http://yoursite.com/2016/04/11/%E7%AC%AC%E5%85%AD%E5%91%A8%E5%91%A8%E7%BB%93/"/>
    <id>http://yoursite.com/2016/04/11/第六周周结/</id>
    <published>2016-04-11T04:40:48.000Z</published>
    <updated>2016-04-13T04:19:48.235Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;/uploads/zijingqiao.jpg&quot; height=&quot;500px&quot; ,=&quot;&quot; width=&quot;450px&quot; style=&quot;margin:0 0&quot;&gt;&lt;br&gt;这一周，过得挺快的，毕竟周一是清明假期最后一天，然后第一次计算机网络的实验课也被冲掉了&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/acmusume/01.png&quot; height=&quot;50px&quot; ,=&quot;&quot; width=&quot;50px&quot; style=&quot;margin:0 0&quot;&gt;&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;好吧进入主题了。&lt;/p&gt;
&lt;h1 id=&quot;一，课内学习&quot;&gt;&lt;a href=&quot;#一，课内学习&quot; class=&quot;headerlink&quot; title=&quot;一，课内学习&quot;&gt;&lt;/a&gt;一，课内学习&lt;/h1&gt;&lt;p&gt;首先是&lt;strong&gt;汇编&lt;/strong&gt;，要求是把一个16位的二进制数按，eg: BX:0110101100111100&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;二进制&lt;/li&gt;
&lt;li&gt;四进展&lt;/li&gt;
&lt;li&gt;八进制&lt;/li&gt;
&lt;li&gt;十进制&lt;/li&gt;
&lt;li&gt;十六进制&lt;br&gt;分别显示出来。&lt;br&gt;二进制的：使用ROL循环左移命令，循环移动16次输出&lt;br&gt;然后剩下的我的做法是：&lt;br&gt;四进制，循环八次，初始值为30H，每次第一位如果是1，我就ADD 2，第二位如果是1，我就ADD 1，最后输出，0的话就什么都不加。&lt;br&gt;这样结果就是，1230330&lt;br&gt;八进制要想输出第一位，然后循环5次移动3位，做法类似四进制，十六进制同理。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;不过&lt;/strong&gt;&lt;br&gt;老师的做法更简单，直接移位&lt;br&gt;四进制：直接移动2位，&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;ROL BX,CL
MOV DL,BL
AND DL,3  #保留低2位
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt; …循环输出&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;八进制，同样要输出第一位，然后每次移动3位，十六进制就是4位。这样的代码量比较少，也更灵活。&lt;/p&gt;
&lt;p&gt;十进制有两种做法：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;循环5次，先除以10000，输出商，余数继续除以1000，100，10，这样就可以得出结果&lt;/li&gt;
&lt;li&gt;也是循环五次，每次除以10，余数入栈，商继续除。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;然后是&lt;strong&gt;计组&lt;/strong&gt;，快速过了一门硬件语言VHDL的语法，老师讲得有点快，基本没记住。。。&lt;br&gt;VHDL语言是一种用于电路设计的高级语言。它在80年代的后期出现。最初是由美国国防部开发出来供美军用来提高设计的可靠性和缩减开发周期的一种使用范围较小的设计语言 。&lt;br&gt;实验课写了个半加器，&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;library ieee; //引入库
use ieee.std_logic_1164.all;//有点像c++

entity fa is //这是这门语言的数据结果，类似一个实体类
port(a,b,ci : in std_logic; //io变量的定义
       s,co : out std_logic);
end fa;

architecture b_fa of fa is //一个使用fa的结构体
begin
  s&amp;lt;=a xor b xor ci;// s=a异或b异或ci
  co&amp;lt;=((a xor b) and ci) or (a and b);//and 是与运算
end b_fa;
&lt;/code&gt;&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;有点像汇编的写法。。。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;操作系统&lt;/strong&gt;呢，主要教了&lt;em&gt;互斥与同步&lt;/em&gt;。在单处理器多道程序设计系统中，进程被交替执行，表现出一种并发执行的外部特征。这时，有些资源的访问或共享充满了危险，比如两个进程都使用同一个变量，进行读写操作，那么结果不可预料。&lt;/p&gt;
&lt;p&gt;讲到互斥，就要提到临界区，所谓临界区，可以是一段代码，或者是某些资源，比如说打印机，在一个时刻下，只能有一份文件在打印。其他人要打印就必须排队等待，这里的排队等待就使用了互斥原理，当打印完成后，打印机发出信号，我空闲了，那么下一个人马上去打印，这里就体现了同步。&lt;/p&gt;
&lt;p&gt;常用的解决并发问题有一个就是&lt;em&gt;信号量&lt;/em&gt;，什么是信号量呢？就那上面的打印栗子讲，这里的信号量可以是打印机是否被使用。有三个步骤。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;一个二元信号量的初始化，0或者1.&lt;/li&gt;
&lt;li&gt;semWait操作检查信号量的值，若为0，那么semWait就会受阻。若为1则改变为0，继续执行改进程。&lt;/li&gt;
&lt;li&gt;semSignal操作检查是否有任何进程在该信号上受阻，有的话，受阻进程就会被唤醒，如果没有进程受阻，那么值就被设为1.&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;while(true){
    semWait(s);
    /*临界区*/
    semSignal(s);
    /*ohter code*/
}
    使用信号量的互斥
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;还有一个经典的问题，就是生产者跟消费者的问题，我就不描述，直接给出代码了&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;void producer(){
     while(true){
     produce();
     semWait(s);//等待进入缓冲区
     append(); //向缓冲区写入
     semSignal(s);//释放缓冲区
     semSignal(n); //缓冲区数据+1；
     }
}

void consumer(){
     while(true){
     semWait(n);//判断缓冲区释放有数据可读
     semWait(s);//等待进入缓冲区
     take(); //从缓冲区读出
     semSignal(s);//释放缓冲区
     consume();
     }
}
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&quot;二、课外学习&quot;&gt;&lt;a href=&quot;#二、课外学习&quot; class=&quot;headerlink&quot; title=&quot;二、课外学习&quot;&gt;&lt;/a&gt;二、课外学习&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;HttpClient&lt;/strong&gt;&lt;br&gt;了解了一下&lt;strong&gt;HttpClient&lt;/strong&gt;怎么用，怎么发送请求，处理相应。&lt;br&gt;之所以了解怎么用是因为一门选修课的老师说平时分是根据查看网络平台上的资源次数给分的，我就想可不可以不用手动点击来增加次数，不过既然是计算机专业的学生，怎么不把它交给计算机来做呢？&lt;br&gt;&lt;img src=&quot;/images/acmusume/24.png&quot; height=&quot;50px&quot; ,=&quot;&quot; width=&quot;50px&quot; style=&quot;margin:0 0&quot;&gt;&lt;br&gt;可以刷的次数：&lt;br&gt;&lt;img src=&quot;http://7xsve9.com1.z0.glb.clouddn.com/githubjzgc.jpg&quot;&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;本来想自动抓取全部网站的页面，但是很多都是不相关的，所以最后直接拿到这几个的链接，然后循环发送GET请求来刷次数了：&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;Map params = new HashMap&amp;lt;String, String&amp;gt;(2);
params.put(&amp;quot;IPT_LOGINUSERNAME&amp;quot;, username);
params.put(&amp;quot;IPT_LOGINPASSWORD&amp;quot;, password);
count = 50;
//创建client
client = HttpClients.createDefault();
UrlEncodedFormEntity postEntity = new UrlEncodedFormEntity(getParam(params), &amp;quot;UTF-8&amp;quot;);
HttpPost httpPost = new HttpPost(loginUrl);
httpPost.setEntity(postEntity);
System.out.println(&amp;quot;request line: &amp;quot; + httpPost.getRequestLine());
   try {
        //执行post请求
        HttpResponse httpResponse = client.execute(httpPost);
        String location = httpResponse.getFirstHeader(&amp;quot;Location&amp;quot;).getValue();
        if (location != null &amp;amp;&amp;amp; location.startsWith(loginUrl)) {
        System.err.println(&amp;quot;-----login error&amp;quot;);
        System.exit(-1);
         }
        System.out.println(&amp;quot;登录成功！！！！！！！！！！！！！！！！！！&amp;quot;);
        printResponse(httpResponse);
        } catch (Exception e) {
         e.printStackTrace();
       }
&lt;/code&gt;&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;拿到HttpResponse后，可以调用http包里面的EntitUtils工具类进行处理，得到相应的内容。&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;String responseString = EntityUtils.toString(entity);
&lt;/code&gt;&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;结果如下图：&lt;br&gt;&lt;img src=&quot;http://7xsve9.com1.z0.glb.clouddn.com/githubjzgc1.jpg&quot;&gt;&lt;br&gt;不敢刷太多。。。&lt;br&gt;&lt;img src=&quot;/images/acmusume/48.png&quot; height=&quot;50px&quot; ,=&quot;&quot; width=&quot;50px&quot; style=&quot;margin:0 0&quot;&gt;&lt;br&gt;关于如何爬取到所有页面，我是从根页面开始，拿到response后解析html标签，把a标签的href用正则拿出来，判断是否为绝对地址，不是的话就自己加上相应的前缀地址。&lt;br&gt;这样递归调用。&lt;br&gt;但是这样的话就有可能死循环了，我用了计数，如果达到某个数就break掉。&lt;br&gt;之后就可以对这些url进行操作的~&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;开始看&lt;em&gt;《深入理解Java虚拟机》 第二版&lt;/em&gt; 这本书。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;第一章讲了Java的发展史，java虚拟机的发展史，才知道原来有那么多版本的虚拟机，而且不同公司也发行自己的虚拟机。有sun公司的，IBM公司的，还有微软的。。。&lt;br&gt;后面讲到自己编译jdk，编译的是OpenJDK，我打算在虚拟机里面的CentOs系统下跟着书上操作一遍。&lt;/p&gt;
&lt;p&gt; ps:今天知道UC的面试结果被rejected了…有点可惜，感觉不难的面试呀，都不知道为什么就被拒绝了，难道因为我才大二吗？&lt;br&gt;&lt;img src=&quot;/images/acmusume/31.png&quot; height=&quot;50px&quot; ,=&quot;&quot; width=&quot;50px&quot; style=&quot;margin:0 0&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      对这一周进行总结
    
    </summary>
    
      <category term="周总结" scheme="http://yoursite.com/categories/%E5%91%A8%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="汇编" scheme="http://yoursite.com/tags/%E6%B1%87%E7%BC%96/"/>
    
      <category term="HttpClient" scheme="http://yoursite.com/tags/HttpClient/"/>
    
      <category term="操作系统" scheme="http://yoursite.com/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>github+hexo3.0 搭建个人博客</title>
    <link href="http://yoursite.com/2016/04/07/github-hexo3-0-%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>http://yoursite.com/2016/04/07/github-hexo3-0-搭建个人博客/</id>
    <published>2016-04-07T15:51:23.000Z</published>
    <updated>2016-04-11T05:05:41.855Z</updated>
    
    <content type="html">&lt;h1 id=&quot;一、前言&quot;&gt;&lt;a href=&quot;#一、前言&quot; class=&quot;headerlink&quot; title=&quot;一、前言&quot;&gt;&lt;/a&gt;一、前言&lt;/h1&gt;&lt;p&gt;最新好奇如何搭建个人博客网站，由于之前买过一台vps，本打算自己写页面的，但是想想还是算了吧，毕竟hexo已经有很多酷炫的主题了，之后有空再自己撸。。。&lt;/p&gt;
&lt;p&gt;由于此类教程在网上已经有很多人发布了。我就根据我在搭建环境，配置参数的情况，做一点小总结：&lt;/p&gt;
&lt;h1 id=&quot;二、总结：&quot;&gt;&lt;a href=&quot;#二、总结：&quot; class=&quot;headerlink&quot; title=&quot;二、总结：&quot;&gt;&lt;/a&gt;二、总结：&lt;/h1&gt;&lt;p&gt;主要用的node.js是4.4.2的，可以自行到官网下载，或点这里&lt;/p&gt;
&lt;p&gt;git的安装–点这里&lt;/p&gt;
&lt;p&gt;hexo3.0&lt;/p&gt;
&lt;p&gt;首先我参考的教程有：&lt;/p&gt;
&lt;p&gt;使用Hexo搭建个人博客(基于hexo3.0) &lt;a href=&quot;http://opiece.me/2015/04/09/hexo-guide&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://opiece.me/2015/04/09/hexo-guide&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;使用hexo搭建静态博客&lt;a href=&quot;http://www.tuicool.com/articles/ABFn2qU&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.tuicool.com/articles/ABFn2qU&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;hexo你的博客 &lt;a href=&quot;http://www.tuicool.com/articles/AfQnQjy&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.tuicool.com/articles/AfQnQjy&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;NexT 使用文档 &lt;a href=&quot;http://theme-next.iissnan.com/getting-started.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://theme-next.iissnan.com/getting-started.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;第三方服务集成 &lt;a href=&quot;http://theme-next.iissnan.com/third-party-services.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://theme-next.iissnan.com/third-party-services.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;有哪些好看的 Hexo 主题？ &lt;a href=&quot;http://www.zhihu.com/question/24422335/answer/46357100&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.zhihu.com/question/24422335/answer/46357100&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;三、遇到的问题&quot;&gt;&lt;a href=&quot;#三、遇到的问题&quot; class=&quot;headerlink&quot; title=&quot;三、遇到的问题&quot;&gt;&lt;/a&gt;三、遇到的问题&lt;/h1&gt;&lt;h2 id=&quot;1&quot;&gt;&lt;a href=&quot;#1&quot; class=&quot;headerlink&quot; title=&quot;1,&quot;&gt;&lt;/a&gt;1,&lt;/h2&gt;&lt;p&gt;这些的教程写得非常详细，我是参考他们的教程搭的，然后我在搭的时候，安装hexo老是出问题，是npm install 不了，卸载了重装也是一样，最后发现了一个很无语的原因–npm install 没反应&lt;/p&gt;
&lt;h2 id=&quot;2&quot;&gt;&lt;a href=&quot;#2&quot; class=&quot;headerlink&quot; title=&quot;2,&quot;&gt;&lt;/a&gt;2,&lt;/h2&gt;&lt;p&gt;完成后就可以托管在github上面了，最后可以绑定自己的域名，这里我也遇到了一个坑，因为修改dns后散播需要一段时间，才会有效，1到几个小时不等吧。然后发现我绑定的域名老是404.那些教程都说是&lt;/p&gt;
&lt;p&gt;在repo的根目录下建立一个CNAME的文件里面写上你的顶级域名，不用加www.&lt;/p&gt;
&lt;p&gt;而我发现github上面还是没有CNAME这个文件，原来这个文件是要放在项目根路径的source文件夹里面。这样才不会被hexo清理掉导致没有推到github。&lt;/p&gt;
&lt;p&gt;我绑定的是二级域名www.guinguo.top 所以需要加上www.&lt;/p&gt;
&lt;p&gt;最后只需要在域名后台管理的dns上加一条CNAME记录&lt;/p&gt;
&lt;p&gt;前面填www，然后指向guinguo.github.io（改成你自己的）就行                              &lt;/p&gt;
&lt;p&gt;最后就可以尽情的撸文章了&lt;/p&gt;
</content>
    
    <summary type="html">
    
      总结github+hexo搭个人博客
    
    </summary>
    
      <category term="blog" scheme="http://yoursite.com/categories/blog/"/>
    
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>hello hexo</title>
    <link href="http://yoursite.com/2016/04/06/hello-hexo/"/>
    <id>http://yoursite.com/2016/04/06/hello-hexo/</id>
    <published>2016-04-06T02:02:01.000Z</published>
    <updated>2016-05-12T05:42:21.947Z</updated>
    
    <content type="html">&lt;p&gt;This is my first hexo article,Hello Hexo!&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://file29.mafengwo.net/M00/1E/2E/wKgBpVWZLZuASMPGAAjSHNJpoC448.groupinfo.w600.jpeg&quot; alt=&quot;sunshine&quot; title=&quot;sunshine&quot;&gt;&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;经过这一周…断断续续地配置，基本上可以撸文章了&lt;img src=&quot;/images/acmusume/01.png&quot; height=&quot;50px&quot; ,=&quot;&quot; width=&quot;50px&quot; style=&quot;margin:0 0&quot;&gt;&lt;br&gt;待会写个总结，把参考的文档都列出来~&lt;/p&gt;
&lt;p&gt;=============================fengexian=============================&lt;br&gt;我在阅览室完成的文章，加上昨天早上的配置，完成这篇文章的时间在一天之内^_^&lt;/p&gt;
&lt;hr&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;This is my first hexo article,Hello Hexo!&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://file29.mafengwo.net/M00/1E/2E/wKgBpVWZLZuASMPGAAjSHNJpoC448.groupinfo.w600.jpeg&quot; alt=&quot;sunshine&quot; title=&quot;sunshine&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="blog" scheme="http://yoursite.com/categories/blog/"/>
    
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
      <category term="文章" scheme="http://yoursite.com/tags/%E6%96%87%E7%AB%A0/"/>
    
  </entry>
  
</feed>
